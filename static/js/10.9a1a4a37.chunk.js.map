{"version":3,"sources":["components/IndiaCases.jsx"],"names":["IndiaCard","lazy","IndiaCases","useState","state","setState","spin","setspin","india","setindia","mydata","useEffect","fetch","then","res","json","result","statewise","fallback","data","id","className","style","float","color","href","type","placeholder","onKeyUp","filter","document","getElementById","value","toUpperCase","tr","getElementsByTagName","i","length","td","textContent","innerHTML","indexOf","display","autoComplete","striped","bordered","hover","responsive","map","item","index","backgroundColor","active","recovered","deaths","confirmed","lastupdatedtime","animation","variant"],"mappings":"uMAKMA,EAAYC,gBAAK,kBAAM,sDAuGdC,UAtGf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACIC,EAASN,EA0Bb,OAzBAO,qBAAU,WACRC,MAAM,0CAA0CC,MAAK,SAACC,GACpDA,EAAIC,OAAOF,MAAK,SAACG,GACfX,EAASW,EAAOC,WAChBV,GAAQ,GACRE,EAASO,EAAOC,UAAU,YAG7B,IAkBD,qCACE,oCACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAAClB,EAAD,CAAWmB,KAAMX,MAGnB,oBACEY,GAAG,UACHC,UAAU,iDAFZ,8BAOA,qBAAKC,MAAO,CAAEC,MAAO,QAASC,MAAO,SAArC,SACE,mBAAGC,KAAK,gBAAR,SACE,cAAC,IAAD,QAIJ,qBAAKJ,UAAU,sBAAf,SACE,uBACEA,UAAU,4BACVD,GAAG,UACHM,KAAK,OACLC,YAAY,0BACZC,QA1CY,WAIpB,IAHA,IAAMC,EAASC,SAASC,eAAe,WAAWC,MAAMC,cAEpDC,EADQJ,SAASC,eAAe,WACrBI,qBAAqB,MAC3BC,EAAI,EAAGA,EAAIF,EAAGG,OAAQD,IAAK,CAClC,IAAIE,EAAKJ,EAAGE,GAAGD,qBAAqB,MAAM,GAC1C,GAAIG,GACcA,EAAGC,aAAeD,EAAGE,WACvBP,cAAcQ,QAAQZ,IAAW,EAC7CK,EAAGE,GAAGd,MAAMoB,QAAU,GAEtBR,EAAGE,GAAGd,MAAMoB,QAAU,SAgCpBC,aAAa,UAIjB,eAAC,IAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,WAAW,KAAK3B,GAAG,UAAjD,UACE,gCACE,+BACE,oCACA,uCACA,wCACA,2CACA,wCACA,6CACA,mDAGJ,gCACGV,EAAOsC,KAAI,SAACC,EAAMC,GAAP,OACV,qBAAgB7B,UAAU,aAA1B,UACE,oBAAIC,MAAO,CAAE6B,gBAAiB,UAA9B,SAA2CD,EAAQ,IACnD,oBAAI7B,UAAU,aAAd,SAA4B4B,EAAK7C,QACjC,oBAAIiB,UAAU,aAAd,SAA4B4B,EAAKG,SACjC,oBAAI/B,UAAU,eAAd,SAA8B4B,EAAKI,YACnC,oBAAIhC,UAAU,YAAd,SAA2B4B,EAAKK,SAChC,oBAAIjC,UAAU,aAAd,SAA4B4B,EAAKM,YACjC,oBAAIlC,UAAU,UAAd,SAAyB4B,EAAKO,oBAPvBN,YAYL,IAAT5C,EACC,qBAAKe,UAAU,cAAf,SACE,cAAC,IAAD,CAASoC,UAAU,SAASC,QAAQ,WAEpC,QAEN,mBAAGtC,GAAG,eAAeC,UAAU,YAA/B,SACE,oBAAGI,KAAK,iBAAR,2BACgB,cAAC,IAAD","file":"static/js/10.9a1a4a37.chunk.js","sourcesContent":["import React, { useEffect, useState, lazy, Suspense } from 'react'\nimport '../App.css'\nimport { FiArrowUp } from 'react-icons/fi'\nimport { GoArrowDown } from 'react-icons/go'\nimport { Table, Spinner } from 'react-bootstrap'\nconst IndiaCard = lazy(() => import('../components/IndiaCard'))\nfunction IndiaCases() {\n  const [state, setState] = useState([])\n  const [spin, setspin] = useState(true)\n  const [india, setindia] = useState([])\n  let mydata = state\n  useEffect(() => {\n    fetch('https://api.covid19india.org/data.json').then((res) => {\n      res.json().then((result) => {\n        setState(result.statewise)\n        setspin(false)\n        setindia(result.statewise[0])\n      })\n    })\n  }, [])\n  const searchMyState = () => {\n    const filter = document.getElementById('myinput').value.toUpperCase()\n    let table = document.getElementById('mytable')\n    let tr = table.getElementsByTagName('tr')\n    for (var i = 1; i < tr.length; i++) {\n      let td = tr[i].getElementsByTagName('td')[1]\n      if (td) {\n        let textvalue = td.textContent || td.innerHTML\n        if (textvalue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = ''\n        } else {\n          tr[i].style.display = 'none'\n        }\n      }\n    }\n  }\n  return (\n    <>\n      <section>\n        <Suspense fallback={<div>loading...</div>}>\n          <IndiaCard data={india} />\n        </Suspense>\n\n        <h2\n          id=\"section\"\n          className=\"fw-bolder text-secondary text-center mt-5 mb-3\"\n        >\n          Search by states\n        </h2>\n\n        <div style={{ float: 'right', color: 'black' }}>\n          <a href=\"#down_section\">\n            <GoArrowDown />\n          </a>\n        </div>\n\n        <div className=\"container searchBox\">\n          <input\n            className=\"form-control form-outline\"\n            id=\"myinput\"\n            type=\"text\"\n            placeholder=\"search by State here...\"\n            onKeyUp={searchMyState}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <Table striped bordered hover responsive=\"sm\" id=\"mytable\">\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>state</th>\n              <th>Active</th>\n              <th>recovered</th>\n              <th>Deaths</th>\n              <th>total cases</th>\n              <th>last updated</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mydata.map((item, index) => (\n              <tr key={index} className=\"text-white\">\n                <td style={{ backgroundColor: 'purple' }}>{index + 1}</td>\n                <td className=\"bg-success\">{item.state}</td>\n                <td className=\"bg-primary\">{item.active}</td>\n                <td className=\"bg-secondary\">{item.recovered}</td>\n                <td className=\"bg-danger\">{item.deaths}</td>\n                <td className=\"bg-warning\">{item.confirmed}</td>\n                <th className=\"bg-info\">{item.lastupdatedtime}</th>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        {spin === true ? (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"info\" />\n          </div>\n        ) : null}\n      </section>\n      <p id=\"down_section\" className=\"vert-move\">\n        <a href=\"#covid19-meter\">\n          Covid19 meter <FiArrowUp />\n        </a>\n      </p>\n    </>\n  )\n}\n\nexport default IndiaCases\n"],"sourceRoot":""}