{"version":3,"sources":["components/Home.jsx"],"names":["TotalCases","lazy","SearchByCountry","Home","useState","spin","setspin","state","setState","totalcase","settotalcase","updateStatus","navigator","onLine","document","getElementById","innerHTML","window","addEventListener","useEffect","fetch","then","res","json","result","c","Countries","error","console","log","id","className","style","textTransform","textAlign","fallback","data","float","color","href","type","placeholder","onKeyUp","value","toUpperCase","tr","getElementsByTagName","i","length","td","textContent","indexOf","display","autoComplete","striped","bordered","hover","responsive","map","item","index","Country","NewConfirmed","backgroundColor","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","animation","variant"],"mappings":"sMAKMA,EAAaC,gBAAK,kBAAM,sDACxBC,EAAkBD,gBAAK,kBAAM,iCAoIpBE,UAnIf,WACE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAkCA,SAASC,IACHC,UAAUC,SAEZC,SAASC,eAAe,UAAUC,UAAY,4BAGlD,OAvCAC,OAAOC,iBAAiB,SAAUP,GAClCM,OAAOC,iBAAiB,UAAWP,GACnCQ,qBAAU,WACR,IACEC,MAAM,sCAAsCC,MAAK,SAACC,GAChDA,EAAIC,OAAOF,MAAK,SAACG,GACfd,EAAac,GACb,IAAMC,EAAID,EAAOE,UACjBlB,EAASiB,GACTnB,GAAQ,SAGZ,MAAOqB,GACPC,QAAQC,IAAI,cAAgBF,MAE7B,IAyBD,gCACE,qBACEG,GAAG,SACHC,UAAU,yBACVC,MAAO,CACLC,cAAe,YACfC,UAAW,YAGf,oBAAIH,UAAU,yBAAd,+BACA,cAAC,WAAD,CAAUI,SAAU,6CAApB,SACE,cAACjC,EAAD,MAEY,MAAbO,EACC,cAAC,WAAD,CAAU0B,SAAU,qBAAKJ,UAAU,eAAf,wBAApB,SACE,cAAC/B,EAAD,CAAYoC,KAAM3B,MAElB,KACJ,gCACE,oBACEqB,GAAG,YACHC,UAAU,iDAFZ,+BAMA,qBAAKC,MAAO,CAAEK,MAAO,QAASC,MAAO,SAArC,SACE,mBAAGC,KAAK,gBAAR,SACE,cAAC,IAAD,QAIJ,qBAAKR,UAAU,sBAAf,SACE,uBACEA,UAAU,4BACVD,GAAG,UACHU,KAAK,OACLC,YAAY,4BACZC,QA5Dc,WAItB,IAHA,IAAIN,EAAOtB,SAASC,eAAe,WAAW4B,MAAMC,cAEhDC,EADQ/B,SAASC,eAAe,WACrB+B,qBAAqB,MAC3BC,EAAI,EAAGA,EAAIF,EAAGG,OAAQD,IAAK,CAClC,IAAIE,EAAKJ,EAAGE,GAAGD,qBAAqB,MAAM,GAC1C,GAAIG,GACcA,EAAGC,aAAeD,EAAGjC,WACvB4B,cAAcO,QAAQf,IAAS,EAC3CS,EAAGE,GAAGf,MAAMoB,QAAU,GAEtBP,EAAGE,GAAGf,MAAMoB,QAAU,SAkDpBC,aAAa,UAIjB,eAAC,IAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,WAAW,KAAK3B,GAAG,UAAjD,UACE,gCACE,+BACE,oCACA,yCACA,8CACA,2CACA,6CACA,4CACA,gDACA,iDAGJ,gCACGvB,EAAMmD,KAAI,SAACC,EAAMC,GAAP,OACT,qBAAgB7B,UAAU,aAA1B,UACE,oBAAIA,UAAU,UAAd,SAAyB6B,EAAQ,IACjC,oBAAI7B,UAAU,eAAd,SAA8B4B,EAAKE,UACnC,oBAAI9B,UAAU,aAAd,SAA4B4B,EAAKG,eACjC,oBAAI9B,MAAO,CAAE+B,gBAAiB,UAA9B,SAA2CJ,EAAKK,YAChD,oBAAIjC,UAAU,aAAd,SAA4B4B,EAAKM,cACjC,oBAAIjC,MAAO,CAAE+B,gBAAiB,QAA9B,SAAyCJ,EAAKO,eAC9C,oBAAInC,UAAU,aAAd,SAA4B4B,EAAKQ,iBACjC,oBAAIpC,UAAU,YAAd,SACG4B,EAAKG,aAAeH,EAAKQ,eAAiBR,EAAKM,gBAT3CL,YAeL,IAATvD,EACC,qBAAK0B,UAAU,cAAf,SACE,cAAC,IAAD,CAASqC,UAAU,OAAOC,QAAQ,WAElC,QAEN,mBAAGvC,GAAG,eAAeC,UAAU,YAA/B,SACE,oBAAGQ,KAAK,iBAAR,2BACgB,cAAC,IAAD","file":"static/js/8.545b45b3.chunk.js","sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react'\nimport '../App.css'\nimport { Table, Spinner } from 'react-bootstrap'\nimport { FiArrowUp } from 'react-icons/fi'\nimport { GoArrowDown } from 'react-icons/go'\nconst TotalCases = lazy(() => import('../components/TotalCases'))\nconst SearchByCountry = lazy(() => import('../components/SearchByCountry'))\nfunction Home() {\n  const [spin, setspin] = useState(true)\n  const [state, setState] = useState([])\n  const [totalcase, settotalcase] = useState(null)\n  window.addEventListener('online', updateStatus)\n  window.addEventListener('offline', updateStatus)\n  useEffect(() => {\n    try {\n      fetch('https://api.covid19api.com/summary').then((res) => {\n        res.json().then((result) => {\n          settotalcase(result)\n          const c = result.Countries\n          setState(c)\n          setspin(false)\n        })\n      })\n    } catch (error) {\n      console.log('my error is' + error)\n    }\n  }, [])\n\n  const searchMyCountry = () => {\n    let data = document.getElementById('myInput').value.toUpperCase()\n    let table = document.getElementById('mytable')\n    let tr = table.getElementsByTagName('tr')\n    for (var i = 1; i < tr.length; i++) {\n      let td = tr[i].getElementsByTagName('td')[1]\n      if (td) {\n        let textvalue = td.textContent || td.innerHTML\n        if (textvalue.toUpperCase().indexOf(data) > -1) {\n          tr[i].style.display = ''\n        } else {\n          tr[i].style.display = 'none'\n        }\n      }\n    }\n  }\n  function updateStatus() {\n    if (navigator.onLine);\n    else {\n      document.getElementById('status').innerHTML = 'oops! you are offline...'\n    }\n  }\n  return (\n    <div>\n      <div\n        id=\"status\"\n        className=\"text-center bg-warning\"\n        style={{\n          textTransform: 'lowercase',\n          textAlign: 'center',\n        }}\n      ></div>\n      <h4 className=\"text-center live_style\">ðŸ”´ LIVE</h4>\n      <Suspense fallback={<div>loading...</div>}>\n        <SearchByCountry />\n      </Suspense>\n      {totalcase != null ? (\n        <Suspense fallback={<div className=\"text-primary\">loading...</div>}>\n          <TotalCases data={totalcase} />\n        </Suspense>\n      ) : null}\n      <div>\n        <h2\n          id=\"vert-move\"\n          className=\"fw-bolder text-secondary text-center mt-5 mb-3\"\n        >\n          Search by Country\n        </h2>\n        <div style={{ float: 'right', color: 'black' }}>\n          <a href=\"#down_section\">\n            <GoArrowDown />\n          </a>\n        </div>\n\n        <div className=\"container searchBox\">\n          <input\n            className=\"form-control form-outline\"\n            id=\"myInput\"\n            type=\"text\"\n            placeholder=\"search by country here...\"\n            onKeyUp={searchMyCountry}\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <Table striped bordered hover responsive=\"sm\" id=\"mytable\">\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>Country</th>\n              <th>NewConfirmed</th>\n              <th>NewDeaths</th>\n              <th>TotalDeaths</th>\n              <th>TotalCases</th>\n              <th>TotalRecovered</th>\n              <th>TotalCases</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.map((item, index) => (\n              <tr key={index} className=\"text-white\">\n                <td className=\"bg-info\">{index + 1}</td>\n                <td className=\"bg-secondary\">{item.Country}</td>\n                <td className=\"bg-success\">{item.NewConfirmed}</td>\n                <td style={{ backgroundColor: 'purple' }}>{item.NewDeaths}</td>\n                <td className=\"bg-primary\">{item.TotalDeaths}</td>\n                <td style={{ backgroundColor: 'pink' }}>{item.NewRecovered}</td>\n                <td className=\"bg-warning\">{item.TotalRecovered}</td>\n                <td className=\"bg-danger\">\n                  {item.NewConfirmed + item.TotalRecovered + item.TotalDeaths}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        {spin === true ? (\n          <div className=\"text-center\">\n            <Spinner animation=\"grow\" variant=\"info\" />\n          </div>\n        ) : null}\n      </div>\n      <p id=\"down_section\" className=\"vert-move\">\n        <a href=\"#covid19-meter\">\n          Covid19 meter <FiArrowUp />\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}